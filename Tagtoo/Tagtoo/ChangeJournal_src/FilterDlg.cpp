// FilterDlg.cpp : implementation file
//

#include "stdafx.h"
#include "ChangeJournal.h"
#include "FilterDlg.h"

#ifdef _DEBUG
#define new DEBUG_NEW
#undef THIS_FILE
static char THIS_FILE[] = __FILE__;
#endif

/////////////////////////////////////////////////////////////////////////////
// CFilterDlg dialog


CFilterDlg::CFilterDlg(CWnd* pParent /*=NULL*/)
	: CDialog(CFilterDlg::IDD, pParent)
{
	//{{AFX_DATA_INIT(CFilterDlg)
	m_BASIC_INFO_CHANGE = FALSE;
	m_CLOSE = FALSE;
	m_COMPRESSION_CHANGE = FALSE;
	m_DATA_EXTEND = TRUE;
	m_DATA_OVERWRITE = TRUE;
	m_DATA_TRUNCATION = FALSE;
	m_EA_CHANGE = FALSE;
	m_ENCRYPTION_CHANGE = FALSE;
	m_FILE_CREATE = TRUE;
	m_FILE_DELETE = TRUE;
	m_HARD_LINK_CHANGE = FALSE;
	m_INDEXABLE_CHANGE = FALSE;
	m_NAMED_DATA_EXTEND = FALSE;
	m_NAMED_DATA_OVERWRITE = FALSE;
	m_NAMED_DATA_TRUNCATION = FALSE;
	m_OBJECT_ID_CHANGE = FALSE;
	m_RENAME_NEW_NAME = TRUE;
	m_RENAME_OLD_NAME = TRUE;
	m_REPARSE_POINT_CHANGE = FALSE;
	m_SECURITY_CHANGE = FALSE;
	m_STREAM_CHANGE = FALSE;
	//}}AFX_DATA_INIT
	
	m_dwFilter = getFilter();
}


void CFilterDlg::DoDataExchange(CDataExchange* pDX)
{
	CDialog::DoDataExchange(pDX);
	//{{AFX_DATA_MAP(CFilterDlg)
	DDX_Check(pDX, IDC_CK_BASIC_INFO_CHANGE, m_BASIC_INFO_CHANGE);
	DDX_Check(pDX, IDC_CK_CLOSE, m_CLOSE);
	DDX_Check(pDX, IDC_CK_COMPRESSION_CHANGE, m_COMPRESSION_CHANGE);
	DDX_Check(pDX, IDC_CK_DATA_EXTEND, m_DATA_EXTEND);
	DDX_Check(pDX, IDC_CK_DATA_OVERWRITE, m_DATA_OVERWRITE);
	DDX_Check(pDX, IDC_CK_DATA_TRUNCATION, m_DATA_TRUNCATION);
	DDX_Check(pDX, IDC_CK_EA_CHANGE, m_EA_CHANGE);
	DDX_Check(pDX, IDC_CK_ENCRYPTION_CHANGE, m_ENCRYPTION_CHANGE);
	DDX_Check(pDX, IDC_CK_FILE_CREATE, m_FILE_CREATE);
	DDX_Check(pDX, IDC_CK_FILE_DELETE, m_FILE_DELETE);
	DDX_Check(pDX, IDC_CK_HARD_LINK_CHANGE, m_HARD_LINK_CHANGE);
	DDX_Check(pDX, IDC_CK_INDEXABLE_CHANGE, m_INDEXABLE_CHANGE);
	DDX_Check(pDX, IDC_CK_NAMED_DATA_EXTEND, m_NAMED_DATA_EXTEND);
	DDX_Check(pDX, IDC_CK_NAMED_DATA_OVERWRITE, m_NAMED_DATA_OVERWRITE);
	DDX_Check(pDX, IDC_CK_NAMED_DATA_TRUNCATION, m_NAMED_DATA_TRUNCATION);
	DDX_Check(pDX, IDC_CK_OBJECT_ID_CHANGE, m_OBJECT_ID_CHANGE);
	DDX_Check(pDX, IDC_CK_RENAME_NEW_NAME, m_RENAME_NEW_NAME);
	DDX_Check(pDX, IDC_CK_RENAME_OLD_NAME, m_RENAME_OLD_NAME);
	DDX_Check(pDX, IDC_CK_REPARSE_POINT_CHANGE, m_REPARSE_POINT_CHANGE);
	DDX_Check(pDX, IDC_CK_SECURITY_CHANGE, m_SECURITY_CHANGE);
	DDX_Check(pDX, IDC_CK_STREAM_CHANGE, m_STREAM_CHANGE);
	//}}AFX_DATA_MAP
}


BEGIN_MESSAGE_MAP(CFilterDlg, CDialog)
	//{{AFX_MSG_MAP(CFilterDlg)
	ON_WM_CREATE()
	//}}AFX_MSG_MAP
END_MESSAGE_MAP()

void CFilterDlg::OnOK() 
{
	UpdateData(TRUE);

	m_dwFilter = getFilter();
	
	CDialog::OnOK();
}

DWORD CFilterDlg::getFilter()
{
	DWORD filter = 0;
	if(m_BASIC_INFO_CHANGE) filter |= USN_REASON_BASIC_INFO_CHANGE;
	else if(m_CLOSE) filter |= USN_REASON_CLOSE;
	else if(m_COMPRESSION_CHANGE) filter |= USN_REASON_COMPRESSION_CHANGE;
	else if(m_DATA_EXTEND) filter |= USN_REASON_DATA_EXTEND;
	else if(m_DATA_OVERWRITE) filter |= USN_REASON_DATA_OVERWRITE;
	else if(m_DATA_TRUNCATION) filter |= USN_REASON_DATA_TRUNCATION;
	else if(m_EA_CHANGE) filter |= USN_REASON_EA_CHANGE;
	else if(m_ENCRYPTION_CHANGE) filter |= USN_REASON_ENCRYPTION_CHANGE;
	else if(m_FILE_CREATE) filter |= USN_REASON_FILE_CREATE;
	else if(m_FILE_DELETE) filter |= USN_REASON_FILE_DELETE;
	else if(m_HARD_LINK_CHANGE) filter |= USN_REASON_HARD_LINK_CHANGE;
	else if(m_INDEXABLE_CHANGE) filter |= USN_REASON_INDEXABLE_CHANGE;
	else if(m_NAMED_DATA_EXTEND) filter |= USN_REASON_NAMED_DATA_EXTEND;
	else if(m_NAMED_DATA_OVERWRITE) filter |= USN_REASON_NAMED_DATA_OVERWRITE;
	else if(m_NAMED_DATA_TRUNCATION) filter |= USN_REASON_NAMED_DATA_TRUNCATION;
	else if(m_OBJECT_ID_CHANGE) filter |= USN_REASON_OBJECT_ID_CHANGE;
	else if(m_RENAME_NEW_NAME ) filter |= USN_REASON_RENAME_NEW_NAME ;
	else if(m_RENAME_OLD_NAME) filter |= USN_REASON_RENAME_OLD_NAME;
	else if(m_REPARSE_POINT_CHANGE) filter |= USN_REASON_REPARSE_POINT_CHANGE;
	else if(m_SECURITY_CHANGE) filter |= USN_REASON_SECURITY_CHANGE;
	else if(m_STREAM_CHANGE) filter |= USN_REASON_STREAM_CHANGE;

	return filter;
}
